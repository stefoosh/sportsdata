version: 2

workflows:
  version: 2
  build-app-and-image:
    jobs:
      - gradle-app:
          context:
            - dockerhub
            - sportsdata

jobs:
  gradle-app:
    docker:
      - image: cimg/openjdk:17.0.6

    working_directory: ~/sportsdata

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: true

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: pwd
      - run: ls -latrh
      - run: mkdir -p ./application/src/main/resources
      - run: echo "logging.level.org.springframework.data.mongodb=DEBUG" >> ./application/src/main/resources/application.properties
      - run: echo "logging.level.sh.stefoosh.sportsdata.application=DEBUG" >> ./application/src/main/resources/application.properties
      - run: echo "${SPRING_DATA_MONGODB_DATABASE}" >> ./application/src/main/resources/application.properties
      - run: echo "${SPRING_DATA_MONGODB_URI}" >> ./application/src/main/resources/application.properties
      - run: mkdir -p ./library/src/test/resources
# TODO: mock config in tests or decouple upstream service from library into its own submodule
      - run: echo "service.apiAuthHeaderKey=foo" >> ./library/src/test/resources/application.properties
      - run: echo "service.sportsDataApiBaseUrl=http://fakeApi" >> ./library/src/test/resources/application.properties
      - run: echo "service.mlbSubscriptionKey=asdf" >> ./library/src/test/resources/application.properties
      - run: echo "service.nhlSubscriptionKey=qwerty" >> ./library/src/test/resources/application.properties
      - run: echo "service.soccerSubscriptionKey=1234" >> ./library/src/test/resources/application.properties
#      - run: cp ./library/src/test/resources/application.properties ./sync/src/main/resources/application.properties
#      - run: echo "spring.main.web-application-type=none" >> ./sync/src/main/resources/application.properties
      - run: ./gradlew clean test
      - run: ./gradlew clean build
      - run: ./gradlew clean bootJar
      - run: docker build . -f ./docker/Dockerfile -t stefoosh/sportsdata:latest
      - run: echo "${DOCKERHUB_PASSWORD}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
      - run: docker image push stefoosh/sportsdata:latest