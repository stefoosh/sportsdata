import org.gradle.plugins.ide.idea.model.IdeaLanguageLevel

buildscript {
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:${springGradleDependencyManagementPluginVersion}"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
//		classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:{$spotbugsPluginVersion}"
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
}

plugins {
	id "io.spring.dependency-management" version "${springGradleDependencyManagementPluginVersion}"
	id "org.springframework.boot" version "${springBootVersion}"
}

repositories {
	maven { url "https://plugins.gradle.org/m2/" }
	maven { url "https://dl.bintray.com/servicetalk/servicetalk/" }
}

apply plugin: "org.springframework.boot"

apply plugin: "java"
java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of("$javaLanguageVersion".toInteger()))
	}
}

apply plugin: "idea"
idea {
	module {
		languageLevel = new IdeaLanguageLevel("${javaLanguageVersion}")
	}
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
	implementation project(':library')

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
}

test {
	useJUnitPlatform()
	testLogging {
//		events = ["passed", "skipped", "failed", "standardOut", "standardError"]
//		exceptionFormat "full"
		events = ["passed", "skipped", "failed"]
	}
}

//apply plugin: "checkstyle"
//checkstyle {
//	toolVersion = "${checkstyleVersion}"
//	sourceSets = [sourceSets.main]
//}
//
//apply plugin: "com.github.spotbugs"
//spotbugs {
//	onlyAnalyze = ['sh.stefoosh.sportsdata.sync.*']
//}